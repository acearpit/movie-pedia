{"version":3,"sources":["redux/actionConstants.js","redux/actionCreators/auth.js","redux/actionCreators/stateVariables.js","Components/Navbar/Navbar.jsx","Components/Loaders/HashLoader.jsx","Components/Loaders/ClockLoader.jsx","Components/Auth/Auth.jsx","Components/Footer/Footer.jsx","hoc/Auxiliary.jsx","redux/actionCreators/currentSearch.js","Containers/LiveSearch/LiveSearch.jsx","Components/HomePage/Banner/Banner.jsx","Components/HomePage/Row/Row.jsx","Containers/HomePage/HomePage.jsx","redux/actionCreators/currentMovie.js","Containers/Movie/Movie.jsx","App.jsx","redux/actionCreators/homepage.js","redux/reducers/currentsearch.js","redux/reducers/statevariables.js","redux/reducers/currentmoviedata.js","redux/reducers/homepage.js","redux/reducers/auth.js","redux/globalReducer.js","API/features_api.js","API/auth_api.js","redux/globalSaga.js","index.jsx"],"names":["SET_STATE_VARIABLE","GET_CURRENT_SEARCH_DATA","SET_CURRENT_SEARCH_DATA","GET_CURRENT_MOVIE_DATA","SET_CURRENT_MOVIE_DATA","GET_MOVIES","SET_MOVIES","AUTHORISE_USER","LOGOUT","SET_CURRENT_USER_DATA","setCurrentUserData","data","type","setStateVariable","svType","val","connect","state","isLoggedIn","auth","token","user","dispatch","signout","setStateVar","handleSearch","useState","show","setShow","className","to","src","placeholder","id","onChange","onClick","e","preventDefault","color","Avatar","getRandomColor","name","first_name","last_name","size","xmlns","style","height","width","marginLeft","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","override","css","Loader","loading","stateVariables","authLoading","error","authError","success","authSuccess","authorise","isLogin","authoriseUser","setIsLogin","firstName","setFirstName","firstNameError","setFirstNameError","lastName","setLastName","lastNameError","setLastNameError","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","updateState","handleUpdation","field","target","value","history","useHistory","useEffect","goBack","error_string","test","validateEmail","validate","Footer","fluid","Date","getFullYear","href","Auxiliary","props","children","getCurrentSearchData","searchQuery","pageNum","setCurrentSearchData","globalState","isLoading","searchLoading","search","currentSearch","handleLiveSearch","withRouter","setLoading","prevHandler","curr_search","curr_page","nextHandler","res","pagination","totPages","Container","movies","map","movie","image_path","poster_path","Col","md","alt","original_title","textDecoration","renderSearchResults","Banner","data-bs-ride","idx","background","backdrop_path","backgroundPosition","backgroundSize","backgroundRepeat","filter","role","data-bs-slide","aria-hidden","Row","homepage","setCurrentMovieData","movieLoading","movie_data","movieData","getCurrentMovie","getCurrentMovieData","match","params","readyData","arr","entry","join","readyRevenue","num","str","toString","length","substr","tagline","overview","genres","production_companies","release_date","revenue","runtime","vote_average","vote_count","homepageLoading","isSearchLoading","isMovieLoading","toRedirect","redirect","getAllMovies","event","encodeURI","path","exact","component","Movie","Auth","initialState","currPage","homepageError","searchError","movieError","banner","nowPlaying","trending","topRated","upcoming","_id","watchlist","combineReducers","action","newState","results","API_KEY","process","BASE_URL","axios","get","url","api_endpoint","post","headers","getSearchResults","getMovies","getMovieData","rootSaga","put","delay","call","features","fetched_data","total_pages","toFetch","all","JSON","stringify","response","takeLatest","takeEvery","persistConfig","key","storage","stateReconciler","autoMergeLevel2","sagaMiddleware","createSagaMiddleware","store","createStore","persistReducer","reducer","composeWithDevTools","applyMiddleware","persistor","persistStore","run","saga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c17546b.chunk.js","sourcesContent":["/* STATE VARIABLES */\r\nexport const SET_STATE_VARIABLE = \"SET_STATE_VARIABLE\";\r\n\r\n/* CURRENT SEARCH */\r\nexport const GET_CURRENT_SEARCH_DATA = \"GET_CURRENT_SEARCH_DATA\";\r\nexport const SET_CURRENT_SEARCH_DATA = \"SET_CURRENT_SEARCH_DATA\";\r\n\r\n/* CURRENT MOVIE */\r\nexport const GET_CURRENT_MOVIE_DATA = \"GET_CURRENT_MOVIE_DATA\";\r\nexport const SET_CURRENT_MOVIE_DATA = \"SET_CURRENT_MOVIE_DATA\";\r\n\r\n/* HOMEPAGE */\r\nexport const GET_MOVIES = \"GET_MOVIES\";\r\nexport const SET_MOVIES = \"SET_MOVIES\";\r\n\r\n/* USER */\r\nexport const AUTHORISE_USER = \"AUTHORISE_USER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_CURRENT_USER_DATA = \"GET_CURRENT_USER_DATA\";\r\nexport const SET_CURRENT_USER_DATA = \"SET_CURRENT_USER_DATA\";\r\n","import { AUTHORISE_USER, GET_CURRENT_USER_DATA, LOGOUT, SET_CURRENT_USER_DATA } from \"../actionConstants\";\r\n\r\nexport const authoriseUser = (isLogin, data) => {\r\n  return {\r\n    type: AUTHORISE_USER,\r\n    isLogin,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n\r\nexport const getCurrentUserData = (id) => {\r\n  return {\r\n    type: GET_CURRENT_USER_DATA,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setCurrentUserData = (data) => {\r\n  return {\r\n    type: SET_CURRENT_USER_DATA,\r\n    data,\r\n  };\r\n};\r\n","import { SET_STATE_VARIABLE } from \"../actionConstants\";\r\n\r\nexport const setStateVariable = (svType, val) => {\r\n  return {\r\n    type: SET_STATE_VARIABLE,\r\n    svType,\r\n    val,\r\n  };\r\n};\r\n","import \"./Navbar.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Avatar from \"react-avatar\";\r\nimport { logout } from \"../../redux/actionCreators/auth\";\r\nimport { setStateVariable } from \"../../redux/actionCreators/stateVariables\";\r\n\r\nconst navbar = ({ handleSearch, isLoggedIn, user, signout, setStateVar }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/movie-pedia\" className=\"nav_left\">\r\n        <img src=\"https://pngimage.net/wp-content/uploads/2018/06/mp-png-5.png\" />\r\n      </Link>\r\n      <div className=\"nav_center\">\r\n        <input type=\"text\" placeholder=\"Search here...\" className=\"input\" id=\"searchBar\" onChange={handleSearch} />\r\n      </div>\r\n      <div className=\"nav_right\">\r\n        {isLoggedIn ? (\r\n          <div\r\n            className=\"user_data\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShow(!show);\r\n            }}>\r\n            <Avatar color={Avatar.getRandomColor(\"sitebase\", [\"red\", \"green\", \"blue\", \"violet\"])} name={`${user.first_name} ${user.last_name}`} size=\"35\" className=\"user_avatar\" />\r\n            <span>\r\n              Hi, {user.first_name}\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ height: \"20px\", width: \"15px\", marginLeft: \"5px\" }} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={4} d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </span>\r\n\r\n            {show ? (\r\n              <div className=\"user_dropdown\">\r\n                <span>\r\n                  <Link to=\"/movie-pedia/profile\">My Profile</Link>\r\n                </span>\r\n                <span>\r\n                  <Link to=\"/movie-pedia/watchlist\">My Watchlist</Link>\r\n                </span>\r\n                <span className=\"divider\" />\r\n                <span\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setStateVar(\"authSuccess\", false);\r\n                    signout();\r\n                  }}>\r\n                  Signout\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <Link to=\"/movie-pedia/auth\" className=\"login\">\r\n            Signin\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.auth.token ? true : false,\r\n    user: state.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signout: () => dispatch(logout()),\r\n    setStateVar: (type, val) => dispatch(setStateVariable(type, val)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(navbar);\r\n","import { css } from \"@emotion/core\";\r\n\r\nimport React from \"react\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nconst override = css`\r\n  top: 35vh;\r\n  margin: auto auto;\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst Loader = ({ size, color, loading }) => {\r\n  return <HashLoader css={override} size={size} color={color} loading={loading} />;\r\n};\r\n\r\nexport default Loader;\r\n","import { css } from \"@emotion/core\";\r\n\r\nimport React from \"react\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\n\r\nconst override = css`\r\n  top: 35vh;\r\n  margin: auto auto;\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst Loader = ({ size, color, loading }) => {\r\n  return <ClockLoader size={size} color={color} loading={loading} />;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authoriseUser } from \"../../redux/actionCreators/auth\";\r\nimport { setStateVariable } from \"../../redux/actionCreators/stateVariables\";\r\n\r\nimport ClockLoader from \"../Loaders/ClockLoader\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = ({ loading, error, success, user, authorise, setStateVar }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [firstNameError, setFirstNameError] = useState(\"\");\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [lastNameError, setLastNameError] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n\r\n  const updateState = (e) => {\r\n    handleUpdation();\r\n\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    if (field === \"first_name\") {\r\n      setFirstName(value);\r\n    } else if (field === \"last_name\") {\r\n      setLastName(value);\r\n    } else if (field === \"email\") {\r\n      setEmail(value);\r\n    } else if (field === \"password\") {\r\n      setPassword(value);\r\n    } else {\r\n      setConfirmPassword(value);\r\n    }\r\n  };\r\n\r\n  function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  const validate = () => {\r\n    const error_string = \"This field is required!\";\r\n\r\n    if (!isLogin) {\r\n      if (!firstName) {\r\n        setFirstNameError(error_string);\r\n        return false;\r\n      }\r\n\r\n      if (!lastName) {\r\n        setLastNameError(error_string);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!email) {\r\n      setEmailError(error_string);\r\n      return false;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setEmailError(\"Please enter a valid email!\");\r\n      return false;\r\n    }\r\n\r\n    if (!password) {\r\n      setPasswordError(error_string);\r\n      return false;\r\n    }\r\n\r\n    if (!isLogin) {\r\n      if (!confirmPassword) {\r\n        setConfirmPasswordError(error_string);\r\n        return false;\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n        setConfirmPasswordError(\"The passwords do not match\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleAuth = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!loading) {\r\n      setStateVar(\"authError\", \"\");\r\n      const isValid = validate();\r\n\r\n      if (!isValid) return;\r\n\r\n      let data;\r\n      if (isLogin) data = { email, password };\r\n      else data = { first_name: firstName, last_name: lastName, email, password };\r\n\r\n      authorise(isLogin, data);\r\n    }\r\n  };\r\n\r\n  const handleUpdation = () => {\r\n    setFirstNameError(\"\");\r\n    setLastNameError(\"\");\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n    setConfirmPasswordError(\"\");\r\n    setStateVar(\"authError\", false);\r\n    setStateVar(\"authLoading\", false);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (success && user.token) {\r\n      history.goBack();\r\n    }\r\n  }, [success, error, loading, user]);\r\n\r\n  return (\r\n    <div className=\"auth_bg\">\r\n      <div className=\"auth_middle_cntnr\">\r\n        {error && <p className=\"auth_error\">{error}</p>}\r\n        {!isLogin && (\r\n          <>\r\n            <div className=\"auth_field\">\r\n              <span className=\"auth_label\">\r\n                First Name <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n              <input type=\"text\" name=\"first_name\" value={firstName} className={firstNameError ? \"error_border\" : \"\"} onChange={updateState} />\r\n              {firstNameError && <p className=\"error\">{firstNameError}</p>}\r\n            </div>\r\n            <div className=\"auth_field\">\r\n              <span className=\"auth_label\">\r\n                Last Name <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n              <input type=\"text\" name=\"last_name\" value={lastName} className={lastNameError ? \"error_border\" : \"\"} onChange={updateState} />\r\n              {lastNameError && <p className=\"error\">{lastNameError}</p>}\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"auth_field\">\r\n          <span className=\"auth_label\">\r\n            Email <span style={{ color: \"red\" }}>*</span>\r\n          </span>\r\n          <input type=\"email\" name=\"email\" value={email} className={emailError ? \"error_border\" : \"\"} onChange={updateState} />\r\n          {emailError && <p className=\"error\">{emailError}</p>}\r\n        </div>\r\n        <div className=\"auth_field\">\r\n          <span className=\"auth_label\">\r\n            Password <span style={{ color: \"red\" }}>*</span>\r\n          </span>\r\n          <input type=\"password\" name=\"password\" value={password} className={passwordError ? \"error_border\" : \"\"} onChange={updateState} />\r\n          {passwordError && <p className=\"error\">{passwordError}</p>}\r\n        </div>\r\n        {!isLogin && (\r\n          <div className=\"auth_field\">\r\n            <span className=\"auth_label\">\r\n              Confirm Password <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n            <input type=\"password\" name=\"confirm_pass\" className={confirmPasswordError ? \"error_border\" : \"\"} value={confirmPassword} onChange={updateState} />\r\n            {confirmPasswordError && <p className=\"error\">{confirmPasswordError}</p>}\r\n          </div>\r\n        )}\r\n        <button className=\"signup\" onClick={handleAuth}>\r\n          {loading ? <ClockLoader size={25} color={\"white\"} loading={loading} /> : isLogin ? \"Login\" : \"Signup\"}\r\n        </button>\r\n        <div\r\n          className=\"switch\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            handleUpdation();\r\n            setIsLogin(!isLogin);\r\n          }}>\r\n          {!isLogin ? \"Already have an account? Login\" : \"Don't have an account? Signup\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.stateVariables.authLoading,\r\n    error: state.stateVariables.authError,\r\n    success: state.stateVariables.authSuccess,\r\n    user: state.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    authorise: (isLogin, data) => dispatch(authoriseUser(isLogin, data)),\r\n    setStateVar: (type, val) => dispatch(setStateVariable(type, val)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter color=\"#daa520\" className=\"font-small darken-3 pt-0\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          Copyright &copy; {new Date().getFullYear() + \" \"}\r\n          <a href=\"https://www.MDBootstrap.com\"> Arpit Gupta </a>. All Rights Reserved\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","import { GET_CURRENT_SEARCH_DATA, SET_CURRENT_SEARCH_DATA } from \"../actionConstants\";\r\n\r\nexport const getCurrentSearchData = (searchQuery, pageNum) => {\r\n  return {\r\n    type: GET_CURRENT_SEARCH_DATA,\r\n    searchQuery,\r\n    pageNum,\r\n  };\r\n};\r\n\r\nexport const setCurrentSearchData = (data) => {\r\n  return {\r\n    type: SET_CURRENT_SEARCH_DATA,\r\n    data,\r\n  };\r\n};\r\n","import \"./LiveSearch.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport Auxiliary from \"../../hoc/Auxiliary.jsx\";\r\nimport HashLoader from \"../../Components/Loaders/HashLoader.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentSearchData } from \"../../redux/actionCreators/currentSearch\";\r\n\r\nconst LiveSearch = ({ state, handleLiveSearch }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const prevHandler = () => {\r\n    handleLiveSearch(state.search.curr_search, state.search.curr_page - 1);\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    handleLiveSearch(state.search.curr_search, state.search.curr_page + 1);\r\n  };\r\n\r\n  const renderSearchResults = (res) => {\r\n    let pagination = null;\r\n\r\n    if (state.search.totPages > 1) {\r\n      if (state.search.curr_page === 1) {\r\n        // only next button\r\n        pagination = (\r\n          <button type=\"submit\" className=\"next\" onClick={nextHandler}>\r\n            NEXT\r\n          </button>\r\n        );\r\n      } else if (state.search.curr_page === state.search.totPages) {\r\n        // only prev button\r\n        pagination = (\r\n          <button type=\"submit\" className=\"prev\" onClick={prevHandler}>\r\n            PREV\r\n          </button>\r\n        );\r\n      } else {\r\n        // both prev and next buttons\r\n        pagination = (\r\n          <Auxiliary>\r\n            <button type=\"submit\" className=\"prev\" onClick={prevHandler}>\r\n              PREV\r\n            </button>\r\n            <button type=\"submit\" className=\"next\" onClick={nextHandler}>\r\n              NEXT\r\n            </button>\r\n          </Auxiliary>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container className=\"resultsContainer\">\r\n        <Row className=\"next_prev\">{pagination}</Row>\r\n        <Row className=\"ROW\">\r\n          {res.movies.map((movie) => {\r\n            let image_path;\r\n\r\n            if (!movie.poster_path) image_path = \"https://www.warnersstellian.com/Content/images/product_image_not_available.png\";\r\n            else image_path = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\r\n\r\n            return (\r\n              <Col md=\"3.5\" className=\"movie\" key={movie.id}>\r\n                <div className=\"img_container\">\r\n                  <img src={image_path} alt={movie.original_title} className=\"image\" />\r\n                  <button type=\"submit\" className=\"more_details\">\r\n                    <Link\r\n                      to={`/movie-pedia/movie/${movie.id}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"black\",\r\n                      }}>\r\n                      More Details\r\n                    </Link>\r\n                  </button>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <Row className=\"next_prev\">{pagination}</Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!state.isLoading) setLoading(false);\r\n  }, [state.isLoading]);\r\n\r\n  return loading ? <HashLoader color={\"#daa520\"} loading={loading} size={100} /> : renderSearchResults(state.search);\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.searchLoading,\r\n      search: globalState.currentSearch,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleLiveSearch: (searchQuery, pageNum) => dispatch(getCurrentSearchData(searchQuery, pageNum)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LiveSearch));\r\n","import \"./Banner.css\";\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Banner = ({ movies }) => {\r\n  return (\r\n    <div id=\"banner\" className=\"carousel slide carousel-fade\" data-bs-ride=\"carousel\">\r\n      <div className=\"carousel-inner\">\r\n        {movies.map((movie, idx) => {\r\n          return (\r\n            <div key={movie.id} className={idx === 0 ? \"carousel-item active\" : \"carousel-item\"}>\r\n              <div\r\n                className=\"IMAGE_CONTAINER\"\r\n                style={{\r\n                  background: `url(https://image.tmdb.org/t/p/w500/${movie.backdrop_path})`,\r\n                  backgroundPosition: \"center\",\r\n                  backgroundSize: \"cover\",\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  filter: \"brightness(0.35)\",\r\n                }}\r\n              />\r\n              <div className=\"carousel-caption d-block\">\r\n                <h5 className=\"caption\">{movie.original_title}</h5>\r\n                <Link to={`/movie-pedia/movie/${movie.id}`} style={{ textDecoration: \"none\" }}>\r\n                  <button className=\"btn btn-md more_INFO\">MORE INFO</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <a className=\"carousel-control-prev\" href=\"#banner\" role=\"button\" data-bs-slide=\"prev\">\r\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"visually-hidden\"></span>\r\n      </a>\r\n      <a className=\"carousel-control-next\" href=\"#banner\" role=\"button\" data-bs-slide=\"next\">\r\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"visually-hidden\"></span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import \"./Row.css\";\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Auxiliary from \"../../../hoc/Auxiliary.jsx\";\r\n\r\nconst Row = ({ type, movies }) => {\r\n  return (\r\n    <Auxiliary>\r\n      <h1 className=\"movie_type text-left pl-2\">{type}</h1>\r\n      <div className=\"container-fluid rows\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <div className=\"row_movie\" key={movie.id}>\r\n              <div className=\"image_cont\">\r\n                <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} className=\"row_IMG\" />\r\n              </div>\r\n              <div className=\"more_info\">\r\n                <Link to={`/movie-pedia/movie/${movie.id}`}>\r\n                  <button className=\"more_details\">More Details</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import \"./HomePage.css\";\r\n\r\nimport React from \"react\";\r\n\r\nimport Banner from \"../../Components/HomePage/Banner/Banner.jsx\";\r\nimport Row from \"../../Components/HomePage/Row/Row.jsx\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HomePage = ({ data }) => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <Banner movies={data[\"banner\"]} />\r\n      <Row movies={data[\"nowPlaying\"]} type=\"Now Playing\" />\r\n      <Row movies={data[\"trending\"]} type=\"Trending\" />\r\n      <Row movies={data[\"topRated\"]} type=\"Top Rated\" />\r\n      <Row movies={data[\"upcoming\"]} type=\"Upcoming\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.homepage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import { GET_CURRENT_MOVIE_DATA, SET_CURRENT_MOVIE_DATA } from \"../actionConstants\";\r\n\r\nexport const getCurrentMovieData = (id) => {\r\n  return {\r\n    type: GET_CURRENT_MOVIE_DATA,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setCurrentMovieData = (data) => {\r\n  return {\r\n    type: SET_CURRENT_MOVIE_DATA,\r\n    data,\r\n  };\r\n};\r\n","import \"./Movie.css\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport HashLoader from \"../../Components/Loaders/HashLoader.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentMovieData } from \"../../redux/actionCreators/currentMovie\";\r\n\r\nconst Movie = ({ match, state, getCurrentMovie }) => {\r\n  useEffect(() => {\r\n    getCurrentMovie(+match.params.id);\r\n  }, []);\r\n\r\n  const readyData = (arr) => {\r\n    const updated = arr.map((entry) => entry.name);\r\n    return updated.join(\", \");\r\n  };\r\n\r\n  const readyRevenue = (num) => {\r\n    var str = num.toString();\r\n    var res = \"\";\r\n    let idx = str.length;\r\n    while (idx > 3) {\r\n      idx -= 3;\r\n      var sub_str = str.substr(idx, 3);\r\n      res = \",\" + sub_str + res;\r\n    }\r\n    res = str.substr(0, idx) + res;\r\n    return res;\r\n  };\r\n\r\n  let image_path = null;\r\n  let data = null;\r\n  let tagline = null;\r\n\r\n  if (state.movie_data) {\r\n    data = state.movie_data;\r\n    tagline = data.tagline ? data.tagline : \"No wind favors s/he who has no destined port...\";\r\n    image_path = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\r\n  }\r\n\r\n  return !state.movie_data || (state.movie_data && state.movie_data.id !== +match.params.id) ? (\r\n    <HashLoader color={\"#daa520\"} loading={state.loading} size={100} />\r\n  ) : (\r\n    <div className=\"container Movie\">\r\n      <div className=\"row main_row\">\r\n        <div className=\"col-xs-12 col-md-4 image_container\" style={{ background: `url(${image_path})`, backgroundPosition: \"center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }} />\r\n        <div className=\"col-xs-12 col-md-8 movie_data_container\">\r\n          <h1 className=\"title\">{data.original_title}</h1>\r\n          <h5 className=\"tagline\">{tagline}</h5>\r\n          <p className=\"overview\">{data.overview}</p>\r\n          <h5 className=\"genres_title\"> GENRES: </h5>\r\n          <h5 className=\"genres\"> {readyData(data.genres)} </h5>\r\n          <h5 className=\"prod_companies_title\">PRODUCTION COMPANIES:</h5>\r\n          <h5 className=\"prod_companies\">{readyData(data.production_companies)}</h5>\r\n          <div className=\"container fluid m-0 p-0 mini_cont\">\r\n            <div className=\"row mini_cont_row\">\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> RELEASE DATE: </h5>\r\n                <h5 className=\"genres\">{data.release_date}</h5>\r\n              </div>\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> REVENUE: </h5>\r\n                <h5 className=\"genres\">${data.revenue !== 0 ? readyRevenue(data.revenue) : 1000000}</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mini_cont_row\">\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> RUNNING TIME: </h5>\r\n                <h5 className=\"genres\">{data.runtime} MINS</h5>\r\n              </div>\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> IMDB RATING: </h5>\r\n                <h5 className=\"genres\">\r\n                  {data.vote_average}/10 <span className=\"vote_cnt\">({readyRevenue(data.vote_count)})</span>\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.movieLoading,\r\n      movie_data: globalState.movieData.movieData,\r\n      searchQuery: globalState.currentSearch.curr_search,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCurrentMovie: (id) => dispatch(getCurrentMovieData(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Movie));\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Navbar from \"./Components/Navbar/Navbar.jsx\";\r\nimport HashLoader from \"./Components/Loaders/HashLoader.jsx\";\r\nimport Auth from \"./Components/Auth/Auth\";\r\nimport Footer from \"./Components/Footer/Footer.jsx\";\r\n\r\nimport LiveSearch from \"./Containers/LiveSearch/LiveSearch.jsx\";\r\nimport HomePage from \"./Containers/HomePage/HomePage.jsx\";\r\nimport Movie from \"./Containers/Movie/Movie.jsx\";\r\n\r\nimport { getCurrentSearchData } from \"./redux/actionCreators/currentSearch\";\r\nimport { getMovies } from \"./redux/actionCreators/homepage\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nconst App = ({ state, getAllMovies, handleLiveSearch }) => {\r\n  const handleSearch = (event) => {\r\n    handleLiveSearch(encodeURI(event.target.value), 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\" id=\"##\">\r\n        <Navbar handleSearch={handleSearch} />\r\n        {state.isLoading ? (\r\n          <HashLoader color={\"#daa520\"} loading={state.isLoading} size={100} />\r\n        ) : (\r\n          <>\r\n            {state.toRedirect ? <Redirect to=\"/movie-pedia\" /> : null}\r\n            <Switch>\r\n              <Route path=\"/movie-pedia\" exact>\r\n                {state.search.curr_search ? <LiveSearch /> : <HomePage />}\r\n              </Route>\r\n              <Route path=\"/movie-pedia/movie/:id\" component={Movie} />\r\n              <Route path=\"/movie-pedia/auth\" component={Auth} />\r\n            </Switch>\r\n            {!state.isLoading && !state.isMovieLoading && !state.isSearchLoading ? <Footer /> : null}\r\n          </>\r\n        )}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.homepageLoading,\r\n      isSearchLoading: globalState.stateVariables.searchLoading,\r\n      isMovieLoading: globalState.stateVariables.movieLoading,\r\n      toRedirect: globalState.stateVariables.redirect,\r\n      search: globalState.currentSearch,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllMovies: () => dispatch(getMovies()),\r\n    handleLiveSearch: (searchQuery, pageNum) => dispatch(getCurrentSearchData(searchQuery, pageNum)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { GET_MOVIES, SET_MOVIES } from \"../actionConstants\";\r\n\r\nexport const getMovies = () => {\r\n  return {\r\n    type: GET_MOVIES,\r\n  };\r\n};\r\n\r\nexport const setMovies = (data) => {\r\n  return {\r\n    type: SET_MOVIES,\r\n    data,\r\n  };\r\n};\r\n","import { SET_CURRENT_SEARCH_DATA } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  currPage: 0,\r\n  totPages: 0,\r\n  curr_search: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_SEARCH_DATA:\r\n      state = { ...action.data };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_STATE_VARIABLE } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  homepageLoading: false,\r\n  homepageError: false,\r\n  searchLoading: false,\r\n  searchError: false,\r\n  movieLoading: false,\r\n  movieError: false,\r\n  redirect: false,\r\n  authLoading: false,\r\n  authSuccess: false,\r\n  authError: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_STATE_VARIABLE:\r\n      state = {\r\n        ...state,\r\n        [action.svType]: action.val,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CURRENT_MOVIE_DATA } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  movieData: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_MOVIE_DATA:\r\n      state = {\r\n        ...state,\r\n        movieData: action.data,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_MOVIES } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  banner: [],\r\n  nowPlaying: [],\r\n  trending: [],\r\n  topRated: [],\r\n  upcoming: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MOVIES:\r\n      const newState = {\r\n        banner: action.data[0].data.results,\r\n        nowPlaying: action.data[1].data.results,\r\n        trending: action.data[2].data.results,\r\n        topRated: action.data[3].data.results,\r\n        upcoming: action.data[4].data.results,\r\n      };\r\n\r\n      state = { ...newState };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CURRENT_USER_DATA, LOGOUT } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  email: \"\",\r\n  _id: \"\",\r\n  watchlist: [],\r\n  token: \"\",\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER_DATA:\r\n      delete action.data[\"password\"];\r\n      state = {\r\n        ...action.data,\r\n      };\r\n      return state;\r\n    case LOGOUT:\r\n      state = {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        _id: \"\",\r\n        watchlist: [],\r\n        token: \"\",\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport CurrentSearch from \"./reducers/currentsearch\";\r\nimport StateVariables from \"./reducers/statevariables\";\r\nimport CurrentMovieData from \"./reducers/currentmoviedata\";\r\nimport HomePage from \"./reducers/homepage\";\r\nimport Auth from \"./reducers/auth\";\r\n\r\nexport default combineReducers({ currentSearch: CurrentSearch, stateVariables: StateVariables, movieData: CurrentMovieData, homepage: HomePage, auth: Auth });\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport default {\r\n  getSearchResults: (searchQuery, pageNum) => axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${pageNum}`),\r\n\r\n  getBannerMovies: () => axios.get(`${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=1`),\r\n\r\n  getTypesOfMovies: (url) => axios.get(`${BASE_URL}${url}?api_key=${API_KEY}`),\r\n\r\n  getMovieData: (id) => axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`),\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://movie-pedia-backend.herokuapp.com\";\r\n// const BASE_URL = \"http://localhost:5000\";\r\n\r\nexport default {\r\n  authorise: (isLogin, data) => {\r\n    let api_endpoint;\r\n    if (isLogin) api_endpoint = `${BASE_URL}/login`;\r\n    else api_endpoint = `${BASE_URL}/signup`;\r\n    return axios.post(api_endpoint, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n  },\r\n};\r\n","import { takeLatest, takeEvery, call, put, delay, all } from \"redux-saga/effects\";\r\n\r\nimport { AUTHORISE_USER, GET_CURRENT_MOVIE_DATA, GET_CURRENT_SEARCH_DATA, GET_MOVIES } from \"./actionConstants\";\r\n\r\nimport { setCurrentMovieData } from \"./actionCreators/currentMovie\";\r\nimport { setCurrentSearchData } from \"./actionCreators/currentSearch\";\r\nimport { setMovies } from \"./actionCreators/homepage\";\r\nimport { setStateVariable } from \"./actionCreators/stateVariables\";\r\nimport { setCurrentUserData } from \"./actionCreators/auth\";\r\n\r\nimport features from \"../API/features_api\";\r\nimport auth from \"../API/auth_api\";\r\n\r\nfunction* getSearchResults({ searchQuery, pageNum }) {\r\n  try {\r\n    if (!searchQuery || searchQuery === \"\") {\r\n      const data = {\r\n        movies: [],\r\n        curr_page: 0,\r\n        totPages: 0,\r\n        curr_search: null,\r\n      };\r\n      yield put(setCurrentSearchData(data));\r\n\r\n      yield put(setStateVariable(\"redirect\", true));\r\n      yield delay(500);\r\n      yield put(setStateVariable(\"redirect\", false));\r\n    } else {\r\n      yield put(setStateVariable(\"searchLoading\", true));\r\n\r\n      const fetched_data = yield call(features.getSearchResults, searchQuery, pageNum);\r\n      const data = {\r\n        movies: fetched_data.data.results,\r\n        curr_page: pageNum,\r\n        totPages: fetched_data.data.total_pages,\r\n        curr_search: searchQuery,\r\n      };\r\n      yield put(setCurrentSearchData(data));\r\n\r\n      yield put(setStateVariable(\"searchLoading\", false));\r\n    }\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"searchLoading\", false));\r\n    yield put(setStateVariable(\"searchError\", true));\r\n  }\r\n}\r\n\r\nfunction* getMovies() {\r\n  try {\r\n    yield put(setStateVariable(\"homepageLoading\", true));\r\n\r\n    const toFetch = [\"/movie/now_playing\", \"/trending/movie/week\", \"/movie/top_rated\", \"/movie/upcoming\"];\r\n\r\n    const fetched_data = yield all([\r\n      yield call(features.getBannerMovies),\r\n      yield call(features.getTypesOfMovies, toFetch[0]),\r\n      yield call(features.getTypesOfMovies, toFetch[1]),\r\n      yield call(features.getTypesOfMovies, toFetch[2]),\r\n      yield call(features.getTypesOfMovies, toFetch[3]),\r\n    ]);\r\n    yield put(setMovies(fetched_data));\r\n\r\n    yield put(setStateVariable(\"homepageLoading\", false));\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"homepageLoading\", false));\r\n    yield put(setStateVariable(\"homepageError\", true));\r\n  }\r\n}\r\n\r\nfunction* getMovieData({ id }) {\r\n  try {\r\n    yield put(setStateVariable(\"movieLoading\", true));\r\n\r\n    const data = yield call(features.getMovieData, id);\r\n    yield put(setCurrentMovieData(data.data));\r\n\r\n    yield put(setStateVariable(\"movieLoading\", false));\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"movieLoading\", false));\r\n    yield put(setStateVariable(\"movieError\", true));\r\n  }\r\n}\r\n\r\nfunction* authoriseUser({ isLogin, data }) {\r\n  try {\r\n    yield put(setStateVariable(\"authLoading\", true));\r\n\r\n    const res = yield call(auth.authorise, isLogin, JSON.stringify(data));\r\n    yield put(setCurrentUserData(res.data));\r\n\r\n    yield put(setStateVariable(\"authLoading\", false));\r\n    yield put(setStateVariable(\"authSuccess\", true));\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"authLoading\", false));\r\n    yield put(setStateVariable(\"authError\", error.response.data));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(GET_CURRENT_SEARCH_DATA, getSearchResults);\r\n\r\n  yield takeEvery(GET_MOVIES, getMovies);\r\n\r\n  yield takeEvery(GET_CURRENT_MOVIE_DATA, getMovieData);\r\n\r\n  yield takeEvery(AUTHORISE_USER, authoriseUser);\r\n}\r\n","import \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.jsx\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"./redux/globalReducer\";\nimport saga from \"./redux/globalSaga\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2, // see \"Merge Process\" section for details.\n};\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// mount it on the Store\nconst store = createStore(persistReducer(persistConfig, reducer), composeWithDevTools(applyMiddleware(sagaMiddleware)));\nconst persistor = persistStore(store);\n\n// then run the saga\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<></>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}