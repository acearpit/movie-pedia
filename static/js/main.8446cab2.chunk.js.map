{"version":3,"sources":["Components/Navbar/Navbar.jsx","Components/HomePage/Banner/Banner.jsx","hoc/Auxiliary.jsx","Components/HomePage/Row/Row.jsx","Containers/HomePage/HomePage.jsx","Components/Loaders/HashLoader.jsx","redux/actionConstants.js","redux/actionCreators/currentSearch.js","Containers/LiveSearch/LiveSearch.jsx","redux/actionCreators/currentMovie.js","Containers/Movie/Movie.jsx","Components/Footer/Footer.jsx","App.jsx","redux/actionCreators/homepage.js","redux/reducers/currentsearch.js","redux/reducers/statevariables.js","redux/reducers/currentmoviedata.js","redux/reducers/homepage.js","redux/globalReducer.js","redux/actionCreators/stateVariables.js","API/features_api.js","redux/globalSaga.js","index.jsx"],"names":["navbar","props","className","href","src","type","placeholder","id","onChange","handleSearch","Banner","movies","data-bs-ride","map","movie","idx","backdrop_path","alt","original_title","to","style","textDecoration","role","data-bs-slide","aria-hidden","Auxiliary","children","Row","poster_path","connect","state","data","homepage","override","css","Loader","size","color","loading","SET_STATE_VARIABLE","GET_CURRENT_SEARCH_DATA","SET_CURRENT_SEARCH_DATA","GET_CURRENT_MOVIE_DATA","SET_CURRENT_MOVIE_DATA","GET_MOVIES","SET_MOVIES","getCurrentSearchData","searchQuery","pageNum","setCurrentSearchData","globalState","isLoading","stateVariables","searchLoading","search","currentSearch","dispatch","handleLiveSearch","withRouter","useState","setLoading","prevHandler","curr_search","curr_page","nextHandler","useEffect","res","pagination","totPages","onClick","Container","image_path","Col","md","renderSearchResults","setCurrentMovieData","movieLoading","movie_data","movieData","getCurrentMovie","getCurrentMovieData","match","params","readyData","arr","entry","name","join","readyRevenue","num","str","toString","length","substr","tagline","overview","genres","production_companies","release_date","revenue","runtime","vote_average","vote_count","Footer","fluid","Date","getFullYear","homepageLoading","isSearchLoading","isMovieLoading","toRedirect","redirect","getAllMovies","event","encodeURI","target","value","path","exact","component","Movie","initialState","currPage","homepageError","searchError","movieError","banner","nowPlaying","trending","topRated","upcoming","combineReducers","action","svType","val","newState","results","setStateVariable","API_KEY","process","BASE_URL","axios","get","url","getSearchResults","getMovies","getMovieData","rootSaga","put","delay","call","features","fetched_data","total_pages","toFetch","all","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","saga","ReactDOM","render","document","getElementById"],"mappings":"oOAqBeA,EAjBA,SAACC,GAAD,OACb,sBAAKC,UAAU,SAAf,UACE,mBAAGC,KAAK,eAAR,SACE,qBAAKC,IAAI,+DAA+DF,UAAU,UAEpF,qBAAKA,UAAU,YAAf,SACE,uBAAOG,KAAK,OAAOC,YAAY,iBAAiBJ,UAAU,QAAQK,GAAG,YAAYC,SAAUP,EAAMQ,iBAEnG,wBAAQJ,KAAK,SAASH,UAAU,QAAhC,mBAGA,wBAAQG,KAAK,SAASH,UAAU,SAAhC,wBCsBWQ,G,YAhCA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,sBAAKJ,GAAG,SAASL,UAAU,+BAA+BU,eAAa,WAAvE,UACE,qBAAKV,UAAU,iBAAf,SACGS,EAAOE,KAAI,SAACC,EAAOC,GAClB,OACE,sBAAoBb,UAAmB,IAARa,EAAY,uBAAyB,gBAApE,UACE,qBAAKb,UAAU,kBAAf,SACE,qBAAKE,IAAG,0CAAqCU,EAAME,eAAiBd,UAAU,QAAQe,IAAKH,EAAMI,mBAEnG,sBAAKhB,UAAU,2BAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBY,EAAMI,iBAC/B,cAAC,IAAD,CAAMC,GAAE,6BAAwBL,EAAMP,IAAMa,MAAO,CAAEC,eAAgB,QAArE,SACE,wBAAQnB,UAAU,uBAAlB,8BAPIY,EAAMP,SActB,oBAAGL,UAAU,wBAAwBC,KAAK,UAAUmB,KAAK,SAASC,gBAAc,OAAhF,UACE,sBAAMrB,UAAU,6BAA6BsB,cAAY,SACzD,sBAAMtB,UAAU,uBAElB,oBAAGA,UAAU,wBAAwBC,KAAK,UAAUmB,KAAK,SAASC,gBAAc,OAAhF,UACE,sBAAMrB,UAAU,6BAA6BsB,cAAY,SACzD,sBAAMtB,UAAU,4BC7BTuB,G,MAFG,SAACxB,GAAD,OAAWA,EAAMyB,WC+BpBC,EAxBH,SAAC,GAAsB,IAApBtB,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OACnB,OACE,eAAC,EAAD,WACE,oBAAIT,UAAU,4BAAd,SAA2CG,IAC3C,qBAAKH,UAAU,uBAAf,SACGS,EAAOE,KAAI,SAACC,GACX,OACE,sBAAKZ,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAG,8CAAyCU,EAAMc,aAAe1B,UAAU,cAElF,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMiB,GAAE,6BAAwBL,EAAMP,IAAtC,SACE,wBAAQL,UAAU,eAAlB,gCAN0BY,EAAMP,aCYnCsB,eANS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAME,YAIDH,EAlBE,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAClB,OACE,sBAAK7B,UAAU,OAAf,UACE,cAAC,EAAD,CAAQS,OAAQoB,EAAI,SACpB,cAAC,EAAD,CAAKpB,OAAQoB,EAAI,WAAgB1B,KAAK,gBACtC,cAAC,EAAD,CAAKM,OAAQoB,EAAI,SAAc1B,KAAK,aACpC,cAAC,EAAD,CAAKM,OAAQoB,EAAI,SAAc1B,KAAK,cACpC,cAAC,EAAD,CAAKM,OAAQoB,EAAI,SAAc1B,KAAK,mB,4ECVpC4B,EAAWC,cAAH,4HAYCC,EAJA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7B,OAAO,cAAC,IAAD,CAAYJ,IAAKD,EAAUG,KAAMA,EAAMC,MAAOA,EAAOC,QAASA,KCb1DC,EAAqB,qBAGrBC,EAA0B,0BAC1BC,EAA0B,0BAG1BC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAAa,aACbC,EAAa,aCXbC,EAAuB,SAACC,EAAaC,GAChD,MAAO,CACL3C,KAAMmC,EACNO,cACAC,YAISC,EAAuB,SAAClB,GACnC,MAAO,CACL1B,KAAMoC,EACNV,SCkGWF,eAfS,SAACqB,GACvB,MAAO,CACLpB,MAAO,CACLqB,UAAWD,EAAYE,eAAeC,cACtCC,OAAQJ,EAAYK,mBAKC,SAACC,GAC1B,MAAO,CACLC,iBAAkB,SAACV,EAAaC,GAAd,OAA0BQ,EAASV,EAAqBC,EAAaC,QAI5EnB,CAA6C6B,aApGzC,SAAC,GAAiC,IAA/B5B,EAA8B,EAA9BA,MAAO2B,EAAuB,EAAvBA,iBAAuB,EACpBE,oBAAS,GADW,mBAC3CrB,EAD2C,KAClCsB,EADkC,KAG5CC,EAAc,WAClBJ,EAAiB3B,EAAMwB,OAAOQ,YAAahC,EAAMwB,OAAOS,UAAY,IAGhEC,EAAc,WAClBP,EAAiB3B,EAAMwB,OAAOQ,YAAahC,EAAMwB,OAAOS,UAAY,IA0EtE,OAJAE,qBAAU,WACHnC,EAAMqB,WAAWS,GAAW,KAChC,CAAC9B,EAAMqB,YAEHb,EAAU,cAAC,EAAD,CAAYD,MAAO,UAAWC,QAASA,EAASF,KAAM,MAvE3C,SAAC8B,GAC3B,IAAIC,EAAa,KAgCjB,OA9BIrC,EAAMwB,OAAOc,SAAW,IAGxBD,EAF6B,IAA3BrC,EAAMwB,OAAOS,UAGb,wBAAQ1D,KAAK,SAASH,UAAU,OAAOmE,QAASL,EAAhD,kBAIOlC,EAAMwB,OAAOS,YAAcjC,EAAMwB,OAAOc,SAG/C,wBAAQ/D,KAAK,SAASH,UAAU,OAAOmE,QAASR,EAAhD,kBAOA,eAAC,EAAD,WACE,wBAAQxD,KAAK,SAASH,UAAU,OAAOmE,QAASR,EAAhD,kBAGA,wBAAQxD,KAAK,SAASH,UAAU,OAAOmE,QAASL,EAAhD,sBASN,eAACM,EAAA,EAAD,CAAWpE,UAAU,mBAArB,UACE,cAAC,IAAD,CAAKA,UAAU,YAAf,SAA4BiE,IAC5B,cAAC,IAAD,CAAKjE,UAAU,MAAf,SACGgE,EAAIvD,OAAOE,KAAI,SAACC,GACf,IAAIyD,EAKJ,OAFKA,EADAzD,EAAMc,YACI,8CAA0Cd,EAAMc,aAD1B,iFAInC,cAAC4C,EAAA,EAAD,CAAKC,GAAG,MAAMvE,UAAU,QAAxB,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKE,IAAKmE,EAAYtD,IAAKH,EAAMI,eAAgBhB,UAAU,UAC3D,wBAAQG,KAAK,SAASH,UAAU,eAAhC,SACE,cAAC,IAAD,CACEiB,GAAE,6BAAwBL,EAAMP,IAChCa,MAAO,CACLC,eAAgB,OAChBgB,MAAO,SAJX,gCAJ+BvB,EAAMP,SAkBjD,cAAC,IAAD,CAAKL,UAAU,YAAf,SAA4BiE,OAS+CO,CAAoB5C,EAAMwB,YCpFhGqB,G,MAAsB,SAAC5C,GAClC,MAAO,CACL1B,KAAMsC,EACNZ,UC4FWF,eAhBS,SAACqB,GACvB,MAAO,CACLpB,MAAO,CACLqB,UAAWD,EAAYE,eAAewB,aACtCC,WAAY3B,EAAY4B,UAAUA,UAClC/B,YAAaG,EAAYK,cAAcO,iBAKlB,SAACN,GAC1B,MAAO,CACLuB,gBAAiB,SAACxE,GAAD,OAAQiD,EDlGM,SAACjD,GAClC,MAAO,CACLF,KAAMqC,EACNnC,MC+FkCyE,CAAoBzE,QAI3CsB,CAA6C6B,aA/F9C,SAAC,GAAuC,IAArCuB,EAAoC,EAApCA,MAAOnD,EAA6B,EAA7BA,MAAOiD,EAAsB,EAAtBA,gBAC7Bd,qBAAU,WACRc,GAAiBE,EAAMC,OAAO3E,MAC7B,IAEH,IAAM4E,EAAY,SAACC,GAEjB,OADgBA,EAAIvE,KAAI,SAACwE,GAAD,OAAWA,EAAMC,QAC1BC,KAAK,OAGhBC,EAAe,SAACC,GAIpB,IAHA,IAAIC,EAAMD,EAAIE,WACVzB,EAAM,GACNnD,EAAM2E,EAAIE,OACP7E,EAAM,GAAG,CACdA,GAAO,EAEPmD,EAAM,IADQwB,EAAIG,OAAO9E,EAAK,GACRmD,EAGxB,OADAA,EAAMwB,EAAIG,OAAO,EAAG9E,GAAOmD,GAIzBK,EAAa,KACbxC,EAAO,KACP+D,EAAU,KAQd,OANIhE,EAAM+C,aAERiB,GADA/D,EAAOD,EAAM+C,YACEiB,QAAU/D,EAAK+D,QAAU,kDACxCvB,EAAU,0CAAsCxC,EAAKH,eAG/CE,EAAM+C,YAAe/C,EAAM+C,YAAc/C,EAAM+C,WAAWtE,MAAQ0E,EAAMC,OAAO3E,GACrF,cAAC,EAAD,CAAY8B,MAAO,UAAWC,QAASR,EAAMQ,QAASF,KAAM,MAE5D,qBAAKlC,UAAU,kBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,qCAAf,SACE,qBAAKE,IAAKmE,EAAYrE,UAAU,oBAElC,sBAAKA,UAAU,0CAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB6B,EAAKb,iBAC5B,oBAAIhB,UAAU,UAAd,SAAyB4F,IACzB,mBAAG5F,UAAU,WAAb,SAAyB6B,EAAKgE,WAC9B,oBAAI7F,UAAU,eAAd,uBACA,qBAAIA,UAAU,SAAd,cAAyBiF,EAAUpD,EAAKiE,QAAxC,OACA,oBAAI9F,UAAU,uBAAd,mCACA,oBAAIA,UAAU,iBAAd,SAAgCiF,EAAUpD,EAAKkE,wBAC/C,sBAAK/F,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,6BACA,oBAAIA,UAAU,SAAd,SAAwB6B,EAAKmE,kBAE/B,sBAAKhG,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,wBACA,qBAAIA,UAAU,SAAd,cAA0C,IAAjB6B,EAAKoE,QAAgBX,EAAazD,EAAKoE,SAAW,aAG/E,sBAAKjG,UAAU,oBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,6BACA,qBAAIA,UAAU,SAAd,UAAwB6B,EAAKqE,QAA7B,cAEF,sBAAKlG,UAAU,eAAf,UACE,oBAAIA,UAAU,eAAd,4BACA,qBAAIA,UAAU,SAAd,UACG6B,EAAKsE,aADR,OACyB,uBAAMnG,UAAU,WAAhB,cAA6BsF,EAAazD,EAAKuE,YAA/C,+B,QC7D1BC,EAbA,WACb,OACE,cAAC,IAAD,CAAWlE,MAAM,UAAUnC,UAAU,2BAArC,SACE,qBAAKA,UAAU,oCAAf,SACE,eAAC,IAAD,CAAcsG,OAAK,EAAnB,6BACoB,IAAIC,MAAOC,cAAgB,IAC7C,mBAAGvG,KAAK,8BAAR,2BAFF,gCC4DO0B,eAnBS,SAACqB,GACvB,MAAO,CACLpB,MAAO,CACLqB,UAAWD,EAAYE,eAAeuD,gBACtCC,gBAAiB1D,EAAYE,eAAeC,cAC5CwD,eAAgB3D,EAAYE,eAAewB,aAC3CkC,WAAY5D,EAAYE,eAAe2D,SACvCzD,OAAQJ,EAAYK,mBAKC,SAACC,GAC1B,MAAO,CACLwD,aAAc,kBAAMxD,EC3Df,CACLnD,KAAMuC,KD2DNa,iBAAkB,SAACV,EAAaC,GAAd,OAA0BQ,EAASV,EAAqBC,EAAaC,QAI5EnB,EAnDH,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOkF,EAAqC,EAArCA,aAAcvD,EAAuB,EAAvBA,iBASlC,OAJAQ,qBAAU,WACR+C,MACC,IAGD,cAAC,IAAD,UACE,sBAAK9G,UAAU,MAAMK,GAAG,KAAxB,UACE,cAAC,EAAD,CAAQE,aAXO,SAACwG,GACpBxD,EAAiByD,UAAUD,EAAME,OAAOC,OAAQ,MAW3CtF,EAAMqB,UACL,cAAC,EAAD,CAAYd,MAAO,UAAWC,QAASR,EAAMqB,UAAWf,KAAM,MAE9D,qCACGN,EAAMgF,WAAa,cAAC,IAAD,CAAU3F,GAAG,iBAAoB,KACrD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkG,KAAK,eAAeC,OAAK,EAAhC,SACGxF,EAAMwB,OAAOQ,YAAc,cAAC,EAAD,IAAiB,cAAC,EAAD,MAE/C,cAAC,IAAD,CAAOuD,KAAK,yBAAyBE,UAAWC,OAEhD1F,EAAMqB,WAAcrB,EAAM+E,gBAAmB/E,EAAM8E,gBAA+B,KAAb,cAAC,EAAD,e,gCEtC7Ea,EAAe,CACnB9G,OAAQ,GACR+G,SAAU,EACVtD,SAAU,EACVN,YAAa,M,QCJT2D,EAAe,CACnBd,iBAAiB,EACjBgB,eAAe,EACftE,eAAe,EACfuE,aAAa,EACbhD,cAAc,EACdiD,YAAY,EACZd,UAAU,GCPNU,EAAe,CACnB3C,UAAW,MCDP2C,EAAe,CACnBK,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,SAAU,ICAGC,4BAAgB,CAAE5E,cJElB,WAAmC,IAAlCzB,EAAiC,uDAAzB2F,EAAcW,EAAW,uCAC/C,OAAQA,EAAO/H,MACb,KAAKoC,EAEH,OADAX,EAAK,eAAQsG,EAAOrG,MAEtB,QACE,OAAOD,IIRkDsB,eHKhD,WAAmC,IAAlCtB,EAAiC,uDAAzB2F,EAAcW,EAAW,uCAC/C,OAAQA,EAAO/H,MACb,KAAKkC,EAKH,OAJAT,EAAK,2BACAA,GADA,kBAEFsG,EAAOC,OAASD,EAAOE,MAG5B,QACE,OAAOxG,IGdkFgD,UFDhF,WAAmC,IAAlChD,EAAiC,uDAAzB2F,EAAcW,EAAW,uCAC/C,OAAQA,EAAO/H,MACb,KAAKsC,EAKH,OAJAb,EAAK,2BACAA,GADA,IAEHgD,UAAWsD,EAAOrG,OAGtB,QACE,OAAOD,IER+GE,SDG7G,WAAmC,IAAlCF,EAAiC,uDAAzB2F,EAAcW,EAAW,uCAC/C,OAAQA,EAAO/H,MACb,KAAKwC,EACH,IAAM0F,EAAW,CACfT,OAAQM,EAAOrG,KAAK,GAAGA,KAAKyG,QAC5BT,WAAYK,EAAOrG,KAAK,GAAGA,KAAKyG,QAChCR,SAAUI,EAAOrG,KAAK,GAAGA,KAAKyG,QAC9BP,SAAUG,EAAOrG,KAAK,GAAGA,KAAKyG,QAC9BN,SAAUE,EAAOrG,KAAK,GAAGA,KAAKyG,SAIhC,OADA1G,EAAK,eAAQyG,GAEf,QACE,OAAOzG,M,wBEtBA2G,GAAmB,SAACJ,EAAQC,GACvC,MAAO,CACLjI,KAAMkC,EACN8F,SACAC,Q,oBCJEI,GAAUC,mCACVC,GAAW,+BAEF,GACK,SAAC7F,EAAaC,GAAd,OAA0B6F,KAAMC,IAAN,UAAaF,GAAb,iCAA8CF,GAA9C,kBAA+D3F,EAA/D,iBAAmFC,KADlH,GAGI,kBAAM6F,KAAMC,IAAN,UAAaF,GAAb,kCAA+CF,GAA/C,4BAHV,GAKK,SAACK,GAAD,OAASF,KAAMC,IAAN,UAAaF,IAAb,OAAwBG,EAAxB,oBAAuCL,MALrD,GAOC,SAACnI,GAAD,OAAQsI,KAAMC,IAAN,UAAaF,GAAb,kBAA+BrI,EAA/B,oBAA6CmI,GAA7C,qB,YCDdM,I,YAiCAC,I,YAqBAC,I,YAaeC,IAnEzB,SAAUH,GAAV,qFAA6BjG,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,QAA1C,SAESD,GAA+B,KAAhBA,EAFxB,iBASM,OANMhB,EAAO,CACXpB,OAAQ,GACRoD,UAAW,EACXK,SAAU,EACVN,YAAa,MAPrB,SASYsF,YAAInG,EAAqBlB,IATrC,OAWM,OAXN,SAWYqH,YAAIX,GAAiB,YAAY,IAX7C,OAYM,OAZN,UAYYY,YAAM,KAZlB,QAaM,OAbN,UAaYD,YAAIX,GAAiB,YAAY,IAb7C,gCAeM,OAfN,UAeYW,YAAIX,GAAiB,iBAAiB,IAflD,QAiB2B,OAjB3B,UAiBiCa,YAAKC,GAA2BxG,EAAaC,GAjB9E,QAwBM,OAPMwG,EAjBZ,OAkBYzH,EAAO,CACXpB,OAAQ6I,EAAazH,KAAKyG,QAC1BzE,UAAWf,EACXoB,SAAUoF,EAAazH,KAAK0H,YAC5B3F,YAAaf,GAtBrB,UAwBYqG,YAAInG,EAAqBlB,IAxBrC,QA0BM,OA1BN,UA0BYqH,YAAIX,GAAiB,iBAAiB,IA1BlD,gCA6BI,OA7BJ,oCA6BUW,YAAIX,GAAiB,eAAe,IA7B9C,uDAiCA,SAAUQ,KAAV,yEAEI,OAFJ,kBAEUG,YAAIX,GAAiB,mBAAmB,IAFlD,OAOM,OAHIiB,EAAU,CAAC,qBAAsB,uBAAwB,mBAAoB,mBAJvF,KAM+BC,IAN/B,SAOYL,YAAKC,IAPjB,OAQM,OARN,sBAQYD,YAAKC,GAA2BG,EAAQ,IARpD,QASM,OATN,sBASYJ,YAAKC,GAA2BG,EAAQ,IATpD,QAUM,OAVN,sBAUYJ,YAAKC,GAA2BG,EAAQ,IAVpD,QAWM,OAXN,sBAWYJ,YAAKC,GAA2BG,EAAQ,IAXpD,QAMyB,OANzB,uDAMyB,cANzB,QAaI,OAPMF,EANV,iBAaUJ,YRhDD,CACL/I,KAAMwC,EACNd,KQ8CoByH,IAbxB,QAeI,OAfJ,UAeUJ,YAAIX,GAAiB,mBAAmB,IAflD,gCAiBI,OAjBJ,oCAiBUW,YAAIX,GAAiB,iBAAiB,IAjBhD,uDAqBA,SAAUS,GAAV,4EAEI,OAFqB3I,EAAzB,EAAyBA,GAAzB,kBAEU6I,YAAIX,GAAiB,gBAAgB,IAF/C,OAIiB,OAJjB,SAIuBa,YAAKC,GAAuBhJ,GAJnD,OAKI,OADMwB,EAJV,gBAKUqH,YAAIzE,EAAoB5C,EAAKA,OALvC,OAOI,OAPJ,UAOUqH,YAAIX,GAAiB,gBAAgB,IAP/C,gCASI,OATJ,oCASUW,YAAIX,GAAiB,cAAc,IAT7C,uDAae,SAAUU,KAAV,iEACb,OADa,SACPS,YAAWpH,EAAyBwG,IAD7B,OAGb,OAHa,SAGPa,YAAUjH,EAAYqG,IAHf,OAKb,OALa,SAKPY,YAAUnH,EAAwBwG,IAL3B,wCC3Df,IAAMY,GAAiBC,cAEjBC,GAAQC,sBAAYC,EAASC,8BAAoBC,0BAAgBN,MAEvEA,GAAeO,IAAIC,IAEnBC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFS,SAASC,eAAe,U","file":"static/js/main.8446cab2.chunk.js","sourcesContent":["import \"./Navbar.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst navbar = (props) => (\r\n  <div className=\"Navbar\">\r\n    <a href=\"/movie-pedia\">\r\n      <img src=\"https://pngimage.net/wp-content/uploads/2018/06/mp-png-5.png\" className=\"img\" />\r\n    </a>\r\n    <div className=\"searchbar\">\r\n      <input type=\"text\" placeholder=\"Search here...\" className=\"input\" id=\"searchBar\" onChange={props.handleSearch} />\r\n    </div>\r\n    <button type=\"submit\" className=\"login\">\r\n      Login\r\n    </button>\r\n    <button type=\"submit\" className=\"signup\">\r\n      Signup\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default navbar;\r\n","import \"./Banner.css\";\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Banner = ({ movies }) => {\r\n  return (\r\n    <div id=\"banner\" className=\"carousel slide carousel-fade\" data-bs-ride=\"carousel\">\r\n      <div className=\"carousel-inner\">\r\n        {movies.map((movie, idx) => {\r\n          return (\r\n            <div key={movie.id} className={idx === 0 ? \"carousel-item active\" : \"carousel-item\"}>\r\n              <div className=\"IMAGE_CONTAINER\">\r\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=\"IMAGE\" alt={movie.original_title} />\r\n              </div>\r\n              <div className=\"carousel-caption d-block\">\r\n                <h5 className=\"caption\">{movie.original_title}</h5>\r\n                <Link to={`/movie-pedia/movie/${movie.id}`} style={{ textDecoration: \"none\" }}>\r\n                  <button className=\"btn btn-md more_INFO\">MORE INFO</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <a className=\"carousel-control-prev\" href=\"#banner\" role=\"button\" data-bs-slide=\"prev\">\r\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"visually-hidden\"></span>\r\n      </a>\r\n      <a className=\"carousel-control-next\" href=\"#banner\" role=\"button\" data-bs-slide=\"next\">\r\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"visually-hidden\"></span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","const Auxiliary = (props) => props.children;\r\n\r\nexport default Auxiliary;\r\n","import \"./Row.css\";\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Auxiliary from \"../../../hoc/Auxiliary.jsx\";\r\n\r\nconst Row = ({ type, movies }) => {\r\n  return (\r\n    <Auxiliary>\r\n      <h1 className=\"movie_type text-left pl-2\">{type}</h1>\r\n      <div className=\"container-fluid rows\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <div className=\"row_movie\" key={movie.id}>\r\n              <div className=\"image_cont\">\r\n                <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} className=\"row_IMG\" />\r\n              </div>\r\n              <div className=\"more_info\">\r\n                <Link to={`/movie-pedia/movie/${movie.id}`}>\r\n                  <button className=\"more_details\">More Details</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import \"./HomePage.css\";\r\n\r\nimport React from \"react\";\r\n\r\nimport Banner from \"../../Components/HomePage/Banner/Banner.jsx\";\r\nimport Row from \"../../Components/HomePage/Row/Row.jsx\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HomePage = ({ data }) => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <Banner movies={data[\"banner\"]} />\r\n      <Row movies={data[\"nowPlaying\"]} type=\"Now Playing\" />\r\n      <Row movies={data[\"trending\"]} type=\"Trending\" />\r\n      <Row movies={data[\"topRated\"]} type=\"Top Rated\" />\r\n      <Row movies={data[\"upcoming\"]} type=\"Upcoming\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.homepage,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import { css } from \"@emotion/core\";\r\n\r\nimport React from \"react\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nconst override = css`\r\n  top: 35vh;\r\n  margin: auto auto;\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst Loader = ({ size, color, loading }) => {\r\n  return <HashLoader css={override} size={size} color={color} loading={loading} />;\r\n};\r\n\r\nexport default Loader;\r\n","/* STATE VARIABLES */\r\nexport const SET_STATE_VARIABLE = \"SET_STATE_VARIABLE\";\r\n\r\n/* CURRENT SEARCH */\r\nexport const GET_CURRENT_SEARCH_DATA = \"GET_CURRENT_SEARCH_DATA\";\r\nexport const SET_CURRENT_SEARCH_DATA = \"SET_CURRENT_SEARCH_DATA\";\r\n\r\n/* CURRENT MOVIE */\r\nexport const GET_CURRENT_MOVIE_DATA = \"GET_CURRENT_MOVIE_DATA\";\r\nexport const SET_CURRENT_MOVIE_DATA = \"SET_CURRENT_MOVIE_DATA\";\r\n\r\n/* HOMEPAGE */\r\nexport const GET_MOVIES = \"GET_MOVIES\";\r\nexport const SET_MOVIES = \"SET_MOVIES\";\r\n","import { GET_CURRENT_SEARCH_DATA, SET_CURRENT_SEARCH_DATA } from \"../actionConstants\";\r\n\r\nexport const getCurrentSearchData = (searchQuery, pageNum) => {\r\n  return {\r\n    type: GET_CURRENT_SEARCH_DATA,\r\n    searchQuery,\r\n    pageNum,\r\n  };\r\n};\r\n\r\nexport const setCurrentSearchData = (data) => {\r\n  return {\r\n    type: SET_CURRENT_SEARCH_DATA,\r\n    data,\r\n  };\r\n};\r\n","import \"./LiveSearch.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport Auxiliary from \"../../hoc/Auxiliary.jsx\";\r\nimport HashLoader from \"../../Components/Loaders/HashLoader.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentSearchData } from \"../../redux/actionCreators/currentSearch\";\r\n\r\nconst LiveSearch = ({ state, handleLiveSearch }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const prevHandler = () => {\r\n    handleLiveSearch(state.search.curr_search, state.search.curr_page - 1);\r\n  };\r\n\r\n  const nextHandler = () => {\r\n    handleLiveSearch(state.search.curr_search, state.search.curr_page + 1);\r\n  };\r\n\r\n  const renderSearchResults = (res) => {\r\n    let pagination = null;\r\n\r\n    if (state.search.totPages > 1) {\r\n      if (state.search.curr_page === 1) {\r\n        // only next button\r\n        pagination = (\r\n          <button type=\"submit\" className=\"next\" onClick={nextHandler}>\r\n            NEXT\r\n          </button>\r\n        );\r\n      } else if (state.search.curr_page === state.search.totPages) {\r\n        // only prev button\r\n        pagination = (\r\n          <button type=\"submit\" className=\"prev\" onClick={prevHandler}>\r\n            PREV\r\n          </button>\r\n        );\r\n      } else {\r\n        // both prev and next buttons\r\n        pagination = (\r\n          <Auxiliary>\r\n            <button type=\"submit\" className=\"prev\" onClick={prevHandler}>\r\n              PREV\r\n            </button>\r\n            <button type=\"submit\" className=\"next\" onClick={nextHandler}>\r\n              NEXT\r\n            </button>\r\n          </Auxiliary>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container className=\"resultsContainer\">\r\n        <Row className=\"next_prev\">{pagination}</Row>\r\n        <Row className=\"ROW\">\r\n          {res.movies.map((movie) => {\r\n            let image_path;\r\n\r\n            if (!movie.poster_path) image_path = \"https://www.warnersstellian.com/Content/images/product_image_not_available.png\";\r\n            else image_path = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\r\n\r\n            return (\r\n              <Col md=\"3.5\" className=\"movie\" key={movie.id}>\r\n                <div className=\"img_container\">\r\n                  <img src={image_path} alt={movie.original_title} className=\"image\" />\r\n                  <button type=\"submit\" className=\"more_details\">\r\n                    <Link\r\n                      to={`/movie-pedia/movie/${movie.id}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"black\",\r\n                      }}>\r\n                      More Details\r\n                    </Link>\r\n                  </button>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <Row className=\"next_prev\">{pagination}</Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!state.isLoading) setLoading(false);\r\n  }, [state.isLoading]);\r\n\r\n  return loading ? <HashLoader color={\"#daa520\"} loading={loading} size={100} /> : renderSearchResults(state.search);\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.searchLoading,\r\n      search: globalState.currentSearch,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleLiveSearch: (searchQuery, pageNum) => dispatch(getCurrentSearchData(searchQuery, pageNum)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LiveSearch));\r\n","import { GET_CURRENT_MOVIE_DATA, SET_CURRENT_MOVIE_DATA } from \"../actionConstants\";\r\n\r\nexport const getCurrentMovieData = (id) => {\r\n  return {\r\n    type: GET_CURRENT_MOVIE_DATA,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setCurrentMovieData = (data) => {\r\n  return {\r\n    type: SET_CURRENT_MOVIE_DATA,\r\n    data,\r\n  };\r\n};\r\n","import \"./Movie.css\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport HashLoader from \"../../Components/Loaders/HashLoader.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentMovieData } from \"../../redux/actionCreators/currentMovie\";\r\n\r\nconst Movie = ({ match, state, getCurrentMovie }) => {\r\n  useEffect(() => {\r\n    getCurrentMovie(+match.params.id);\r\n  }, []);\r\n\r\n  const readyData = (arr) => {\r\n    const updated = arr.map((entry) => entry.name);\r\n    return updated.join(\", \");\r\n  };\r\n\r\n  const readyRevenue = (num) => {\r\n    var str = num.toString();\r\n    var res = \"\";\r\n    let idx = str.length;\r\n    while (idx > 3) {\r\n      idx -= 3;\r\n      var sub_str = str.substr(idx, 3);\r\n      res = \",\" + sub_str + res;\r\n    }\r\n    res = str.substr(0, idx) + res;\r\n    return res;\r\n  };\r\n\r\n  let image_path = null;\r\n  let data = null;\r\n  let tagline = null;\r\n\r\n  if (state.movie_data) {\r\n    data = state.movie_data;\r\n    tagline = data.tagline ? data.tagline : \"No wind favors s/he who has no destined port...\";\r\n    image_path = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\r\n  }\r\n\r\n  return !state.movie_data || (state.movie_data && state.movie_data.id !== +match.params.id) ? (\r\n    <HashLoader color={\"#daa520\"} loading={state.loading} size={100} />\r\n  ) : (\r\n    <div className=\"container Movie\">\r\n      <div className=\"row main_row\">\r\n        <div className=\"col-xs-12 col-md-4 image_container\">\r\n          <img src={image_path} className=\"img-fluid IMG\" />\r\n        </div>\r\n        <div className=\"col-xs-12 col-md-8 movie_data_container\">\r\n          <h1 className=\"title\">{data.original_title}</h1>\r\n          <h5 className=\"tagline\">{tagline}</h5>\r\n          <p className=\"overview\">{data.overview}</p>\r\n          <h5 className=\"genres_title\"> GENRES: </h5>\r\n          <h5 className=\"genres\"> {readyData(data.genres)} </h5>\r\n          <h5 className=\"prod_companies_title\">PRODUCTION COMPANIES:</h5>\r\n          <h5 className=\"prod_companies\">{readyData(data.production_companies)}</h5>\r\n          <div className=\"container fluid m-0 p-0 mini_cont\">\r\n            <div className=\"row mini_cont_row\">\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> RELEASE DATE: </h5>\r\n                <h5 className=\"genres\">{data.release_date}</h5>\r\n              </div>\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> REVENUE: </h5>\r\n                <h5 className=\"genres\">${data.revenue !== 0 ? readyRevenue(data.revenue) : 1000000}</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mini_cont_row\">\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> RUNNING TIME: </h5>\r\n                <h5 className=\"genres\">{data.runtime} MINS</h5>\r\n              </div>\r\n              <div className=\"col col-xs-6\">\r\n                <h5 className=\"genres_title\"> IMDB RATING: </h5>\r\n                <h5 className=\"genres\">\r\n                  {data.vote_average}/10 <span className=\"vote_cnt\">({readyRevenue(data.vote_count)})</span>\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.movieLoading,\r\n      movie_data: globalState.movieData.movieData,\r\n      searchQuery: globalState.currentSearch.curr_search,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCurrentMovie: (id) => dispatch(getCurrentMovieData(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Movie));\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter color=\"#daa520\" className=\"font-small darken-3 pt-0\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          Copyright &copy; {new Date().getFullYear() + \" \"}\r\n          <a href=\"https://www.MDBootstrap.com\"> Arpit Gupta </a>. All Rights Reserved\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Navbar from \"./Components/Navbar/Navbar.jsx\";\r\nimport HomePage from \"./Containers/HomePage/HomePage.jsx\";\r\nimport LiveSearch from \"./Containers/LiveSearch/LiveSearch.jsx\";\r\nimport HashLoader from \"./Components/Loaders/HashLoader.jsx\";\r\nimport Movie from \"./Containers/Movie/Movie.jsx\";\r\nimport Footer from \"./Components/Footer/Footer.jsx\";\r\nimport { getCurrentSearchData } from \"./redux/actionCreators/currentSearch\";\r\nimport { getMovies } from \"./redux/actionCreators/homepage\";\r\n\r\nconst App = ({ state, getAllMovies, handleLiveSearch }) => {\r\n  const handleSearch = (event) => {\r\n    handleLiveSearch(encodeURI(event.target.value), 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\" id=\"##\">\r\n        <Navbar handleSearch={handleSearch} />\r\n        {state.isLoading ? (\r\n          <HashLoader color={\"#daa520\"} loading={state.isLoading} size={100} />\r\n        ) : (\r\n          <>\r\n            {state.toRedirect ? <Redirect to=\"/movie-pedia\" /> : null}\r\n            <Switch>\r\n              <Route path=\"/movie-pedia\" exact>\r\n                {state.search.curr_search ? <LiveSearch /> : <HomePage />}\r\n              </Route>\r\n              <Route path=\"/movie-pedia/movie/:id\" component={Movie} />\r\n            </Switch>\r\n            {!state.isLoading && !state.isMovieLoading && !state.isSearchLoading ? <Footer /> : null}\r\n          </>\r\n        )}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (globalState) => {\r\n  return {\r\n    state: {\r\n      isLoading: globalState.stateVariables.homepageLoading,\r\n      isSearchLoading: globalState.stateVariables.searchLoading,\r\n      isMovieLoading: globalState.stateVariables.movieLoading,\r\n      toRedirect: globalState.stateVariables.redirect,\r\n      search: globalState.currentSearch,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllMovies: () => dispatch(getMovies()),\r\n    handleLiveSearch: (searchQuery, pageNum) => dispatch(getCurrentSearchData(searchQuery, pageNum)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { GET_MOVIES, SET_MOVIES } from \"../actionConstants\";\r\n\r\nexport const getMovies = () => {\r\n  return {\r\n    type: GET_MOVIES,\r\n  };\r\n};\r\n\r\nexport const setMovies = (data) => {\r\n  return {\r\n    type: SET_MOVIES,\r\n    data,\r\n  };\r\n};\r\n","import { SET_CURRENT_SEARCH_DATA } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  currPage: 0,\r\n  totPages: 0,\r\n  curr_search: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_SEARCH_DATA:\r\n      state = { ...action.data };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_STATE_VARIABLE } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  homepageLoading: false,\r\n  homepageError: false,\r\n  searchLoading: false,\r\n  searchError: false,\r\n  movieLoading: false,\r\n  movieError: false,\r\n  redirect: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_STATE_VARIABLE:\r\n      state = {\r\n        ...state,\r\n        [action.svType]: action.val,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CURRENT_MOVIE_ID, SET_CURRENT_MOVIE_DATA } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  movieData: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_MOVIE_DATA:\r\n      state = {\r\n        ...state,\r\n        movieData: action.data,\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_MOVIES } from \"../actionConstants\";\r\n\r\nconst initialState = {\r\n  banner: [],\r\n  nowPlaying: [],\r\n  trending: [],\r\n  topRated: [],\r\n  upcoming: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MOVIES:\r\n      const newState = {\r\n        banner: action.data[0].data.results,\r\n        nowPlaying: action.data[1].data.results,\r\n        trending: action.data[2].data.results,\r\n        topRated: action.data[3].data.results,\r\n        upcoming: action.data[4].data.results,\r\n      };\r\n\r\n      state = { ...newState };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport CurrentSearch from \"./reducers/currentsearch\";\r\nimport StateVariables from \"./reducers/statevariables\";\r\nimport CurrentMovieData from \"./reducers/currentmoviedata\";\r\nimport HomePage from \"./reducers/homepage\";\r\n\r\nexport default combineReducers({ currentSearch: CurrentSearch, stateVariables: StateVariables, movieData: CurrentMovieData, homepage: HomePage });\r\n","import { SET_STATE_VARIABLE } from \"../actionConstants\";\r\n\r\nexport const setStateVariable = (svType, val) => {\r\n  return {\r\n    type: SET_STATE_VARIABLE,\r\n    svType,\r\n    val,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport default {\r\n  getSearchResults: (searchQuery, pageNum) => axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${pageNum}`),\r\n\r\n  getBannerMovies: () => axios.get(`${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=1`),\r\n\r\n  getTypesOfMovies: (url) => axios.get(`${BASE_URL}${url}?api_key=${API_KEY}`),\r\n\r\n  getMovieData: (id) => axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`),\r\n};\r\n","import { takeLatest, takeEvery, call, put, delay, all } from \"redux-saga/effects\";\r\n\r\nimport { GET_CURRENT_MOVIE_DATA, GET_CURRENT_SEARCH_DATA, GET_MOVIES } from \"./actionConstants\";\r\n\r\nimport { setCurrentMovieData } from \"./actionCreators/currentMovie\";\r\nimport { setCurrentSearchData } from \"./actionCreators/currentSearch\";\r\nimport { setMovies } from \"./actionCreators/homepage\";\r\nimport { setStateVariable } from \"./actionCreators/stateVariables\";\r\n\r\nimport features from \"../API/features_api\";\r\n\r\nfunction* getSearchResults({ searchQuery, pageNum }) {\r\n  try {\r\n    if (!searchQuery || searchQuery === \"\") {\r\n      const data = {\r\n        movies: [],\r\n        curr_page: 0,\r\n        totPages: 0,\r\n        curr_search: null,\r\n      };\r\n      yield put(setCurrentSearchData(data));\r\n\r\n      yield put(setStateVariable(\"redirect\", true));\r\n      yield delay(500);\r\n      yield put(setStateVariable(\"redirect\", false));\r\n    } else {\r\n      yield put(setStateVariable(\"searchLoading\", true));\r\n\r\n      const fetched_data = yield call(features.getSearchResults, searchQuery, pageNum);\r\n      const data = {\r\n        movies: fetched_data.data.results,\r\n        curr_page: pageNum,\r\n        totPages: fetched_data.data.total_pages,\r\n        curr_search: searchQuery,\r\n      };\r\n      yield put(setCurrentSearchData(data));\r\n\r\n      yield put(setStateVariable(\"searchLoading\", false));\r\n    }\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"searchError\", true));\r\n  }\r\n}\r\n\r\nfunction* getMovies() {\r\n  try {\r\n    yield put(setStateVariable(\"homepageLoading\", true));\r\n\r\n    const toFetch = [\"/movie/now_playing\", \"/trending/movie/week\", \"/movie/top_rated\", \"/movie/upcoming\"];\r\n\r\n    const fetched_data = yield all([\r\n      yield call(features.getBannerMovies),\r\n      yield call(features.getTypesOfMovies, toFetch[0]),\r\n      yield call(features.getTypesOfMovies, toFetch[1]),\r\n      yield call(features.getTypesOfMovies, toFetch[2]),\r\n      yield call(features.getTypesOfMovies, toFetch[3]),\r\n    ]);\r\n    yield put(setMovies(fetched_data));\r\n\r\n    yield put(setStateVariable(\"homepageLoading\", false));\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"homepageError\", true));\r\n  }\r\n}\r\n\r\nfunction* getMovieData({ id }) {\r\n  try {\r\n    yield put(setStateVariable(\"movieLoading\", true));\r\n\r\n    const data = yield call(features.getMovieData, id);\r\n    yield put(setCurrentMovieData(data.data));\r\n\r\n    yield put(setStateVariable(\"movieLoading\", false));\r\n  } catch (error) {\r\n    yield put(setStateVariable(\"movieError\", true));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(GET_CURRENT_SEARCH_DATA, getSearchResults);\r\n\r\n  yield takeEvery(GET_MOVIES, getMovies);\r\n\r\n  yield takeEvery(GET_CURRENT_MOVIE_DATA, getMovieData);\r\n}\r\n","import \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App.jsx\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"./redux/globalReducer\";\nimport saga from \"./redux/globalSaga\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n// then run the saga\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}